#!/bin/bash
# filepath: /home/yuhan/Desktop/Master/yu-ml-weather-analogue/scripts/preprocess_data.sh

# 設置顏色輸出
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# 獲取腳本所在目錄和項目根目錄
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"

# 檢查命令行參數
usage() {
    echo -e "${BLUE}ERA5 數據預處理工具${NC}"
    echo -e "用法:"
    echo -e "  $0 [options]"
    echo -e ""
    echo -e "選項:"
    echo -e "  -v, --variables VAR1,VAR2,...  要處理的變量，如 t2m,msl,u,v"
    echo -e "  -f, --freq FREQ                時間頻率，如 3h, 6h, 12h (默認: 6h)"
    echo -e "  -m, --method METHOD            重採樣方法: mean, sum, none (默認: mean)"
    echo -e "  -p, --preprocess TYPE          預處理方法: raw, log, normalized, standardized (默認: standardized)"
    echo -e "  -y, --years YEAR1-YEAR2        年份範圍，如 2010-2020 (默認: 2010-2010)"
    echo -e "  -o, --output DIR               輸出目錄 (默認: processed)"
    echo -e "  -w, --weighted                 使用權重矩陣"
    echo -e "  --overlap                      使用重疊窗口"
    echo -e "  -h, --help                     顯示此幫助信息"
    echo -e ""
    echo -e "範例:"
    echo -e "  $0 -v t2m,msl -f 6h -y 2010-2020"
    echo -e "  $0 --variables t2m --freq 3h --method sum --preprocess normalized --years 2015-2018"
}

# 默認參數
VARIABLES=""
FREQ="6h"
METHOD="mean"
PREPROCESS="standardized"
START_YEAR=2010
END_YEAR=2010
OUTPUT_DIR="processed"
WEIGHTED=false
OVERLAP=false

# 解析命令行參數
while [[ $# -gt 0 ]]; do
    case $1 in
        -v|--variables)
            VARIABLES=$2
            shift 2
            ;;
        -f|--freq)
            FREQ=$2
            shift 2
            ;;
        -m|--method)
            METHOD=$2
            shift 2
            ;;
        -p|--preprocess)
            PREPROCESS=$2
            shift 2
            ;;
        -y|--years)
            YEAR_RANGE=$2
            START_YEAR=${YEAR_RANGE%-*}
            END_YEAR=${YEAR_RANGE#*-}
            shift 2
            ;;
        -o|--output)
            OUTPUT_DIR=$2
            shift 2
            ;;
        -w|--weighted)
            WEIGHTED=true
            shift
            ;;
        --overlap)
            OVERLAP=true
            shift
            ;;
        -h|--help)
            usage
            exit 0
            ;;
        *)
            echo -e "${RED}錯誤: 未知選項 $1${NC}"
            usage
            exit 1
            ;;
    esac
done

# 檢查必要參數
if [ -z "$VARIABLES" ]; then
    echo -e "${RED}錯誤: 必須指定要處理的變量 (-v, --variables)${NC}"
    usage
    exit 1
fi

# 建立 Python 腳本
PYTHON_SCRIPT="${PROJECT_DIR}/scripts/run_preprocess.py"

cat > "$PYTHON_SCRIPT" << EOF
#!/usr/bin/env python
# This file is auto-generated by preprocess_data.sh

import os
import sys
import time

# 添加項目根目錄到 Python 路徑
project_root = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
sys.path.append(project_root)

from data.data_preprocessor import preprocess_and_save

def main():
    """運行數據預處理"""
    print("=" * 50)
    print("開始數據預處理")
    print("=" * 50)
    
    # 變量列表
    variables = "${VARIABLES}".split(",")
    
    # 數據目錄
    data_directories = []
    for var in variables:
        var = var.strip()
        if var == "t2m":
            data_directories.append(("data/raw/era5/single_level/2m_temperature", "t2m"))
        elif var == "msl":
            data_directories.append(("data/raw/era5/single_level/mean_sea_level_pressure", "msl"))
        elif var == "tp":
            data_directories.append(("data/raw/era5/single_level/total_precipitation", "tp"))
        elif var == "u10":
            data_directories.append(("data/raw/era5/single_level/10m_u_component_of_wind", "u10"))
        elif var == "v10":
            data_directories.append(("data/raw/era5/single_level/10m_v_component_of_wind", "v10"))
        elif var == "u850":
            data_directories.append(("data/raw/era5/pressure_level/850hPa_u_component_of_wind", "u850"))
        elif var == "v850":
            data_directories.append(("data/raw/era5/pressure_level/850hPa_v_component_of_wind", "v850"))
        elif var == "z500":
            data_directories.append(("data/raw/era5/pressure_level/500hPa_geopotential", "z500"))
        else:
            # 添加更多變量映射
            print(f"警告: 未知變量 {var}，將嘗試直接使用該名稱")
            data_directories.append((f"data/raw/era5/single_level/{var}", var))
    
    # 處理參數
    freq = "${FREQ}"
    resample_method = "${METHOD}"
    preprocessing_method = "${PREPROCESS}"
    year_range = (${START_YEAR}, ${END_YEAR})
    weighted = ${WEIGHTED}
    overlap = 1 if ${OVERLAP} else 0
    
    print(f"處理變量: {', '.join(variables)}")
    print(f"時間頻率: {freq}")
    print(f"重採樣方法: {resample_method}")
    print(f"預處理方法: {preprocessing_method}")
    print(f"年份範圍: {year_range[0]}-{year_range[1]}")
    print(f"使用權重: {weighted}")
    print(f"使用重疊: {overlap > 0}")
    
    # 記錄開始時間
    start_time = time.time()
    
    try:
        # 調用預處理函數
        preprocess_and_save(
            data_directories,
            freq,
            resample_method,
            preprocessing_method,
            year_range,
            save_data_directory="${OUTPUT_DIR}",
            overlap=overlap,
            weighted=weighted,
            alpha=0.2,
        )
        
        # 計算執行時間
        elapsed_time = time.time() - start_time
        print(f"\n處理完成！執行時間: {elapsed_time:.2f} 秒")
        
    except Exception as e:
        print(f"\n處理過程中發生錯誤: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)

if __name__ == "__main__":
    main()
EOF

# 添加執行權限
chmod +x "$PYTHON_SCRIPT"

# 運行 Python 腳本
echo -e "${GREEN}開始預處理以下變量: ${YELLOW}${VARIABLES}${NC}"
echo -e "${GREEN}年份範圍: ${YELLOW}${START_YEAR}-${END_YEAR}${NC}"
echo -e "${GREEN}時間頻率: ${YELLOW}${FREQ}${NC}"
echo -e "${GREEN}重採樣方法: ${YELLOW}${METHOD}${NC}"
echo -e "${GREEN}預處理方法: ${YELLOW}${PREPROCESS}${NC}"
echo -e "${GREEN}輸出目錄: ${YELLOW}${OUTPUT_DIR}${NC}"
echo -e "${GREEN}使用權重: ${YELLOW}${WEIGHTED}${NC}"
echo -e "${GREEN}使用重疊: ${YELLOW}${OVERLAP}${NC}"
echo ""

# 檢查是否已激活 conda 環境
if [ -z "$CONDA_DEFAULT_ENV" ]; then
    echo -e "${YELLOW}警告: 未檢測到已激活的 conda 環境，可能導致導入錯誤${NC}"
    echo -e "${YELLOW}建議先激活環境: conda activate yu-ml-weather-analogue${NC}"
    echo ""
    read -p "是否繼續執行? (y/n) " -n 1 -r
    echo ""
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo -e "${RED}已取消操作${NC}"
        exit 1
    fi
fi

# 運行 Python 腳本
python "$PYTHON_SCRIPT"

# 檢查運行結果
if [ $? -eq 0 ]; then
    echo -e "${GREEN}預處理成功完成！${NC}"
else
    echo -e "${RED}預處理過程中發生錯誤，請檢查日誌${NC}"
fi
